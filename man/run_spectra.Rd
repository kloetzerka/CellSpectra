% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_spectra.R
\name{run_spectra}
\alias{run_spectra}
\title{Run Spectra Analysis}
\usage{
run_spectra(
  output_folder_base = output_folder_base,
  cell_types = cell_types,
  CHISQ.MAX = 4,
  expression_threshold = 0,
  gene_number_threshold = 10,
  restrict_to_sample = FALSE,
  results_sample_key = "sampleofinterest",
  vector_of_samples = c(),
  QC_report = TRUE
)
}
\arguments{
\item{output_folder_base}{The base directory for saving output files. The default is set to the
value of the 'output_folder_base' variable defined outside the function.}

\item{cell_types}{Vector of cell types to be processed, defaulting to the 'cell_types' variable
defined outside the function.}

\item{CHISQ.MAX}{Maximum value for chi-square statistic used to cut-off the contribution of an individual gene of a pathway, with a default
value of 4.}

\item{expression_threshold}{Genes with an average expression in the reference
OR query matrix below this threshold are removed from the analysis.
Default 0. Set to -1 for no filtering applied.}

\item{gene_number_threshold}{Number of genes in a gene set after filtering needed to perform analysis. If less genes remaining, results will be NA.
Default 10 genes.}

\item{restrict_to_sample}{Set TRUE if you want to specify the samples to run
CellSpectra on. If FALSE, the tool will run analysis based on the
valid_samples file created by the create_references function.
Make sure to specify the vector_of_samples.
Default: FALSE.}

\item{results_sample_key}{Needed if restrict_to_sample = TRUE. Will specify
the samplekey to use when generating R2 and Pval results into the
output folder. Default: "sampleofinterest".}

\item{vector_of_samples}{A vector of sample in the shape of
c("sample1", "sample2"). Only needed if restrict_to_sample = TRUE.}

\item{QC_report}{If TRUE a QC report of the reference coordination for each
sample / cell type and every pathway will be generated (including the
mean, median, and sd of the reference LOO R2 distribution and the
variance explained by V1 of the reference).
Default: TRUE.}
}
\value{
Does not return any value, but outputs files to the specified directory.
}
\description{
This function performs the actual CellSpectra analysis on our created references from a seurat object, calculates RÂ² and p-values for each gene set, and saves the results in
specified subfolders ('R2' and 'Pval') within the output directory. Only needs the output folder from the create_references function and the cell types to analyze.
}
\examples{
# Create dummy files
counts <- matrix(rpois(80, lambda = 5), nrow = 10)
rownames(counts) <- paste0("Gene", 1:10)
colnames(counts) <- paste0("Cell", 1:8)
seurat_object <- SeuratObject::CreateSeuratObject(counts = counts)

# Downgrade assay to Seurat v4-compatible structure
seurat_object[["RNA"]] <- as(seurat_object[["RNA"]], Class = "Assay")

# Add minimal metadata
seurat_object$celltypes <- c("CellType1", "CellType2", "CellType1", "CellType2",
                             "CellType1", "CellType1", "CellType1", "CellType1")
seurat_object$samples <- c("Sample1", "Sample1", "Sample2", "Sample2",
                           "Sample1", "Sample3", "Sample3", "Sample3")
seurat_object$condition <- c("ConditionA", "ConditionA", "ConditionB",
                             "ConditionB", "ConditionA", "ConditionA",
                             "ConditionA", "ConditionA")

# Create dummy GO matrix and save
genes <- paste0("Gene", 1:10)
go_sets <- matrix(sample(0:1, 10 * 5, replace = TRUE), nrow = 10, ncol = 5)
rownames(go_sets) <- genes
colnames(go_sets) <- paste0("Pathway", 1:5)
output_folder_base <- tempfile("output_example")
dir.create(output_folder_base)
output_folder_base <- paste0(output_folder_base, "/")
go_filepath <- paste0(output_folder_base, "go_sets_modified.rds")
saveRDS(go_sets, file = go_filepath)

# Prepare Seurat object for analysis
seurat_object <- prepare_seurat_object(
  seurat_object,
  celltype_col = "celltypes",
  sample_id_col = "samples",
  condition_col = "condition",
  query_list = c("ConditionB"),
  control_list = c("ConditionA")
)

# Run reference creation
create_references(
  seurat_object = seurat_object,
  output_folder_base = output_folder_base,
  num_replicates = 1,
  cell_types = c("CellType1"),
  cell_number_threshold = 0,
  seed = 123
)

# Run spectra analysis
run_spectra(
  output_folder_base = output_folder_base,
  cell_types = c("CellType1"),
  CHISQ.MAX = 4,
  expression_threshold = -1,
  gene_number_threshold = 0,
  restrict_to_sample = FALSE
)


}
