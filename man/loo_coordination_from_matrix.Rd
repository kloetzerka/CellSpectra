% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loo_coordination_from_matrix.R
\name{loo_coordination_from_matrix}
\alias{loo_coordination_from_matrix}
\title{Leave-One-Out Coordination from Matrix}
\usage{
loo_coordination_from_matrix(
  datD,
  go_sets,
  output_folder,
  coordination_key = "nokey"
)
}
\arguments{
\item{datD}{A normalized matrix containing the dataset from which R² values are calculated. Rows are the samples of interest. Columns are genes.}

\item{go_sets}{A dataframe or matrix where each column is a gene set and rows are genes.
The entries should be binary, indicating gene inclusion in the gene set.
Can be generated using the process_gene_sets_for_matrix function.}

\item{output_folder}{String specifying the path to the output folder where results will be saved.}

\item{coordination_key}{A string identifier used in naming the output file (e.g. the cell type or condition).}
}
\value{
Does not return anything explicitly, but saves the R² results as a CSV file in the output folder.
}
\description{
Calculates R² values using leave-one-out coordination for each gene set in the given matrix.
The matrix can be generated as a cell - type - pseudobulk - matrix from any single cell dataset.
Computes R² values for each sample and gene set, thereby estimating the coordination for the given matrix.
The matrix should contain the samples of interest of a given cell type or condition (pseudobulk).
Make sure to subset datD to only contain samples of interest (e.g. healthy vs diseased)
The results are then saved to a specified output file.
}
\examples{
# Create a dummy expression matrix
set.seed(123)
datD <- matrix(rexp(30, rate = 1), nrow = 3, ncol = 10)
colnames(datD) <- paste0("Gene", 1:10)
rownames(datD) <- paste0("Sample", 1:3)

# Create random gene sets
go_sets <- matrix(sample(0:1, 10 * 5, replace = TRUE), nrow = 10, ncol = 5)
rownames(go_sets) <- colnames(datD)  # gene names as rownames
colnames(go_sets) <- paste0("Pathway", 1:5)

# Create temporary output folder
output_folder <- tempfile("coordination_output_example")
dir.create(output_folder)

# Run function
loo_coordination_from_matrix(
  datD = datD,
  go_sets = go_sets,
  output_folder = output_folder,
  coordination_key = "ExampleCellType"
)
}
